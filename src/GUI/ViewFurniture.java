/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import database.db;
import java.awt.Image;
import java.io.File;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.CustomLogging;
import model.ErrorReporter;

/**
 *
 * @author Rajitha Yasasri
 */
public class ViewFurniture extends javax.swing.JInternalFrame {

    private final int ID_SEARCH = 0;
    private final int TYPE_SEARCH = 1;
    private final int NAME_SEARCH = 2;
    private final int COLOR_SEARCH = 3;
    private final int MATERIAL_SEARCH = 4;
    private final int SELLER_SEARCH = 5;
    private final int WARRANTY_SEARCH = 6;
    private final int BOUGHT_DATE_SEARCH = 7;

    public final String LINE_SEPARATOR = ",,,,";
    public final String VALUE_SEPARATOR = "----";

    public ViewFurniture() {
        initComponents();
        loadAll();
        jDateChooser1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("View furniture");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Cooperative-logo (1).gif"))); // NOI18N

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "search"));

        jLabel5.setText("search by");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Id", "Type", "Name", "Color", "Material", "Seller", "Warranty No", "Bought date" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton3.setText("search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel7.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, -1));

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jPanel7.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, -1));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(368, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Type", "Name", "Color", "Material", "Seller", "Seller address", "Warranty No", "Price (Rs.)", "Bought date", "select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Warranty");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Property", "Value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Print");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(102, 102, 102)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(543, 543, 543)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(37, 37, 37)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE))))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

        if (jComboBox1.getSelectedIndex() == BOUGHT_DATE_SEARCH) {
            jDateChooser1.setVisible(true);
            jTextField3.setVisible(false);

            jDateChooser1.setDate(null);
        } else {
            jDateChooser1.setVisible(false);
            jTextField3.setVisible(true);
            jTextField3.setText(null);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        search();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        search();
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow != -1) {

            try {

                String fId = jTable1.getValueAt(selectedRow, 0).toString();

                ResultSet search = db.search("SELECT warranty,other FROM furniture WHERE idfurniture='" + fId + "'");
                viewImage(search);

                viewOtherDetails(search);
            } catch (Exception e) {
                ErrorReporter.reportError(e);
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        loadAll();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            jTable1.print();
        } catch (Exception e) {
            ErrorReporter.reportError(e);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        int result = JOptionPane.showConfirmDialog(this, "Do you really need to remove this furniture(s) ?\n this action can not be reversed", "WARNING", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if (result == JOptionPane.YES_OPTION) {

            int rowCount = jTable1.getRowCount();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

            if (rowCount != 0) {

                for (int i = 0; i < rowCount; i++) {

                    String isChecked = jTable1.getValueAt(i, 10).toString();
                    if (Boolean.parseBoolean(isChecked)) {
                        try {
                            String fId = jTable1.getValueAt(i, 0).toString();

                            db.iud("UPDATE furniture SET status=-1 WHERE idfurniture='" + fId + "'");
                            CustomLogging.loggingMethod("Removed furniture " + fId, CustomLogging.INFO);

                        } catch (Exception e) {
                            ErrorReporter.reportError(e);
                        }
                    }
                }

                loadAll();
                clearTableImage();
                JOptionPane.showMessageDialog(this, "Successfully removed furniture", "INFO", JOptionPane.INFORMATION_MESSAGE);
            }
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow != -1) {

            try {

                EditFurniture ef = new EditFurniture();
                Home.viewPanel.add(ef);

                ef.show();
                String fId = jTable1.getValueAt(selectedRow, 0).toString();

                ef.searchFromExternal(fId);
            } catch (Exception e) {
                ErrorReporter.reportError(e);
            }

        }

    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables

    private void loadTable(ResultSet search) {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        try {

            while (search.next()) {

                Vector v = new Vector();
                v.add(search.getString("idfurniture"));
                v.add(search.getString("type"));
                v.add(search.getString("name"));
                v.add(search.getString("color"));
                v.add(search.getString("material"));
                v.add(search.getString("seller"));
                v.add(search.getString("seller_address"));
                v.add(search.getString("warranty_no"));
                v.add(search.getString("price"));
                v.add(search.getString("bought_date"));
                v.add(false);

                dtm.addRow(v);
            }

        } catch (Exception e) {
            ErrorReporter.reportError(e);
        }

    }

    private void search() {

        try {
            int selectedIndex = jComboBox1.getSelectedIndex();

            ResultSet search = null;
            if (selectedIndex == BOUGHT_DATE_SEARCH) {
                Date date = jDateChooser1.getDate();

                if (date != null) {

                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

                    String format = sdf.format(date);

                    String query = "SELECT * FROM furniture WHERE status=1 AND bought_date LIKE '%" + format + "%'";
                    search = db.search(query);
                }
            } else {
                String text = jTextField3.getText();

                if (!text.isEmpty()) {

                    String query = "";
                    if (selectedIndex == this.ID_SEARCH) {
                        query = "SELECT * FROM furniture WHERE status=1 AND idfurniture = '" + text + "'";
                    } else if (selectedIndex == this.COLOR_SEARCH) {
                        query = "SELECT * FROM furniture WHERE status=1 AND color LIKE '%" + text + "%'";
                    } else if (selectedIndex == this.MATERIAL_SEARCH) {
                        query = "SELECT * FROM furniture WHERE status=1 AND material LIKE '%" + text + "%'";
                    } else if (selectedIndex == this.NAME_SEARCH) {
                        query = "SELECT * FROM furniture WHERE status=1 AND name LIKE '%" + text + "%'";
                    } else if (selectedIndex == this.SELLER_SEARCH) {
                        query = "SELECT * FROM furniture WHERE status=1 AND seller LIKE '%" + text + "%'";
                    } else if (selectedIndex == this.TYPE_SEARCH) {
                        query = "SELECT * FROM furniture WHERE status=1 AND type LIKE '%" + text + "%'";
                    } else if (selectedIndex == this.WARRANTY_SEARCH) {
                        query = "SELECT * FROM furniture WHERE status=1 AND warranty_no LIKE '%" + text + "%'";
                    }

                    search = db.search(query);
                }
            }

            if (search != null) {
                loadTable(search);
            } else {
                clearTableImage();
            }
        } catch (Exception e) {
            ErrorReporter.reportError(e);
        }

    }

    private void loadAll() {

        try {
            ResultSet search = db.search("SELECT * FROM furniture WHERE status=1");

            loadTable(search);

        } catch (Exception e) {
            ErrorReporter.reportError(e);
        }

    }

    private void viewImage(ResultSet search) {

        jLabel1.setText("Loading ...");
        jLabel1.setIcon(null);
        try {

            if (search.next()) {
                String imgPath = search.getString("warranty");

                if (imgPath.isEmpty()) {

                    jLabel1.setText("no image");

                } else {
                    File f = new File(imgPath);

                    Image img = ImageIO.read(f);
                    img = img.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH);
                    jLabel1.setText(null);
                    jLabel1.setIcon(new ImageIcon(img));
                }
            }
        } catch (Exception e) {
            ErrorReporter.reportError(e);
        }
    }

    private void viewOtherDetails(ResultSet search) {
        //other details

        DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
        dtm.setRowCount(0);

        try {
            String other = search.getString("other");

            if (other != null && !other.isEmpty()) {
                String[] split = other.split(LINE_SEPARATOR);

                for (int i = 0; i < split.length; i++) {

                    String line = split[i];

                    String[] propertyValuePair = line.split(VALUE_SEPARATOR);

                    Vector v = new Vector();
                    v.add(propertyValuePair[0]);
                    v.add(propertyValuePair[1]);

                    dtm.addRow(v);
                }
            }
        } catch (Exception e) {
            ErrorReporter.reportError(e);
        }
    }

    private void clearTableImage() {
        DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
        dtm.setRowCount(0);

        jLabel1.setText("warranty");
        jLabel1.setIcon(null);
    }
}
